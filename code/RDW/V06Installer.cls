Include %occInclude

Class RDW.V06Installer
{

XData SimpleManifest [ XMLNamespace = INSTALLER ]
{
<Manifest>
    <Namespace Name="rdwv4" Create="yes" 
        Code="rdwv4" Data="rdwv4">
      <Configuration>
        <Database Name="rdwv4" Create="yes" 
            Dir="/cachedb/rdw/rdwv4"/>
        <Database Name="fdw_01" Create="yes" 
            Dir="/cachedb/rdw/fdw_01"/>
        <Database Name="fdw_priv" Create="yes" 
            Dir="/cachedb/rdw/fdw_priv"/>
        <Database Name="fdw_12" Create="yes" 
            Dir="/cachedb/rdw/fdw_12"/>
        <Database Name="fdw_10" Create="yes" 
            Dir="/cachedb/rdw/fdw_10"/>
        <GlobalMapping Global="Dim*" From="fdw_01"/>
        <GlobalMapping Global="SPatient*" From="fdw_priv"/>
        <GlobalMapping Global="RxOut*" From="fdw_12"/>
        <GlobalMapping Global="Allergy*" From="fdw_10"/>
        <ClassMapping Package="Dim*" From="fdw_01"/>
        <ClassMapping Package="SPatient*" From="fdw_priv"/>
        <ClassMapping Package="RxOut*" From="fdw_12"/>
        <ClassMapping Package="Allergy*" From="fdw_10"/>
      </Configuration>

    </Namespace>
</Manifest>
}

/// This is a method generator whose code is generated by XGL.
ClassMethod setup(ByRef pVars, pLogLevel As %Integer = 3, 
   pInstaller As %Installer.Installer, 
   pLogger As %Installer.AbstractLogger) 
   As %Status [ CodeMode = objectgenerator, Internal ]
{
    #; Let our XGL document generate code for this method. 
    Quit ##class(%Installer.Manifest).%Generate(%compiledclass, 
    %code, "SimpleManifest")
}


}